{% extends 'administravimas/parduotuve.html.twig' %}

{% block body %}
    {% if successMessage %}
        <div class="alert alert-success alert-dismissible fade show">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Pavyko!</strong> {{ successMessage }}
        </div>
    {% elseif errorMessage %}
        <div class="alert alert-danger alert-dismissible fade show">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Klaida!</strong> {{ errorMessage }}
        </div>
    {% endif %}
    <div class="container" id="map" data-sandeliai="{{ sandeliai|json_encode }}"></div>
{% endblock %}

{% block javascripts %}
    <script>
        var formWindow;
        var form = createForm();
        var map;
        var currentMarker;
        // Initialize and add the map
        function initMap() {
            var infoWindow = new google.maps.InfoWindow;
            var sandeliai = JSON.parse(document.getElementById('map').dataset.sandeliai);
            if(sandeliai.length > 0){
                map = new google.maps.Map(document.getElementById('map'));
                var latLngBounds = new google.maps.LatLngBounds();
                Array.prototype.forEach.call(sandeliai, function(sandelis){
                    latLngBounds.extend(sandelis);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: sandelis,
                        title: sandelis.adresas
                    });

                    var infoContentDiv = document.createElement('div');
                    infoContentDiv.className = "card";

                    var forma = document.createElement('div');
                    forma.innerHTML = '{{ form_start(formEdit, {"attr" : {"id": "forma", "class": "sandelisEdit","style": "margin: 0; padding: 0"}}) }}' +
                            '{{ form_widget(formEdit) }}' +
                            '<button type="button" style="margin: 0; float: right" onclick="saveData()" class="btn btn-sm btn-outline-primary btn-primary">Keisti</button>' +
                            '{{ form_end(formEdit) }}';

                    infoContentDiv.appendChild(forma);
                    marker.addListener('click', function(){
                        currentMarker = marker;
                        infoWindow.setContent(infoContentDiv);
                        infoWindow.open(map, marker);
                        var forma = infoContentDiv.children[0].children[0];
                        forma.elements['sandelis[adresas]'].value = sandelis.adresas;
                        forma.elements['sandelis[edit]'].value = sandelis.id;
                    });
                });
            } else {
                map = new google.maps.Map(document.getElementById('map'), {
                    center: {lat: 55.174775, lng: 24.326873},
                    zoom: 7
                });
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        infoWindow.setPosition(pos);
                        infoWindow.setContent('Jūsų dabartinė vieta aptikta!');
                        infoWindow.open(map);
                        map.setCenter(pos);
                        map.setZoom(12);
                    }, function() {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });
                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindow, map.getCenter());
                }
            }

            formWindow = new google.maps.InfoWindow({
                content: form
            });

            google.maps.event.addListener(map, 'click', function(event) {
                var newMarker = new google.maps.Marker({
                    position: event.latLng,
                    map: map
                });

                google.maps.event.addListener(newMarker, 'click', function() {
                    currentMarker = newMarker;
                    formWindow.open(map, newMarker);
                });
            });

            map.fitBounds(latLngBounds);
        }

        function createForm(){
            var forma = document.createElement('div');
            forma.innerHTML = '' +
                '{{ form_start(formAdd, {"attr" : {"id": "forma", "style": "margin: 0; padding: 0"}}) }}' +
                '{{ form_widget(formAdd) }}' +
                '<button type="button" style="margin: 0; float: right" onclick="saveData()" class="btn btn-sm btn-outline-primary btn-primary">Pridėti!</button>' +
                '{{ form_end(formAdd) }}';
            return forma;
        }

        function saveData(){
            var form = document.getElementById('forma');
            form.elements['sandelis[lat]'].value = currentMarker.getPosition().lat();
            form.elements['sandelis[lng]'].value = currentMarker.getPosition().lng();
            form.submit();
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                'Klaida: Jūsų dabartinė vieta neaptikta!' :
                'Klaida: Jūsų naršyklė nepalaiko dabartinės vietos aptikimo!');
            infoWindow.open(map);
        }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDmDid1JbUslvXsz-JpO9NhIx1tRfyocgc&callback=initMap">
    </script>
{% endblock %}
